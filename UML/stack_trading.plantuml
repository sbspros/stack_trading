@startuml

class StackTrading{

}

class GetAccountInfo{
    __init__(bc:BaseClass,
        conn:BinanceConnection)

    open_orders(symbol:str):
}


class ReviewExistingOrders{
    __init__(bc:BaseClass,
        conn:BinanceConnection)    
}

class CreateNewOrders{
    __init__(bc:BaseClass,
        conn:BinanceConnection)
}
' Common Class
class BaseClass{
    __init__(None)None
}


class Logging{
    init__( file_name:str, log_level:int)None
    info (self,message)None
    warning (self,message)None
    error (self,message)None
    def debug (self,message)None
}

class StackTradingConfig{
}


'Acts like an abstract and interface
interface  AppConfig{
    -version:str
    -appName:str
    -status:str
    -github:str
    -file_name:str
    -log_level:int

    parse_config_file():None
}


class BinanceConnection{
    -client
}

Interface SqlTable{
    is_created(self,conn):
    create_table():
    update():
    delete():
    insert():
    select():
}

class AccountInfo{
}

class SqlAccountInfo{
}

class BinanceAccountInfo {
}
StackTrading "1" -- "1" GetAccountInfo
StackTrading "1" --* "1"BinanceConnection
StackTrading "1" -- "1" ReviewExistingOrders
StackTrading  "1" --*  "1"  BaseClass
StackTrading "1" -- "1" CreateNewOrders
CreateNewOrders -- BinanceTrade
ReviewExistingOrders -- BinanceOrderBook
BinanceOrderBook -- Orders
GetAccountInfo -- BinanceAccountInfo
BinanceTrade -- Orders
BinanceAccountInfo-- AccountInfo 
Orders -- SqlOrders
SqlOrders -- SqlTable
AccountInfo -- SqlAccountInfo
SqlAccountInfo -- SqlTable
BaseClass "1" --*  "1" Logging
BaseClass  "1" --*  "1"  StackTradingConfig
StackTradingConfig "1" --|> "1" AppConfig

@enduml
